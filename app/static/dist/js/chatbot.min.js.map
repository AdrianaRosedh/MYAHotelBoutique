{"version":3,"sources":["chatbot.js","feature1.js","feature2.js"],"names":["initChatbot","toggleChatbot","window","innerWidth","openChatbotMobile","lang","document","body","getAttribute","Swal","fire","title","html","showCloseButton","showConfirmButton","customClass","popup","width","heightAuto","padding","background","backdrop","allowOutsideClick","allowEscapeKey","didOpen","console","log","chatbox","getElementById","localStorage","getItem","innerHTML","let","messages","showInitialMessages","setItem","addEventListener","close","userInput","sendButton","event","key","sendMessageSwal","preventDefault","focus","classList","contains","chatbotContainer","remove","style","height","maxHeight","minHeight","bottom","right","left","borderRadius","add","closeChatbot","async","userInputValue","value","trim","data","await","fetch","method","headers","Content-Type","JSON","stringify","message","json","response","scrollTop","scrollHeight","error","icon","text","sendMessage","historyKey","delay","forEach","index","setTimeout","chatbotToggle","closeButton","querySelector","activeElement","dragElement","animation","display","dispatchEvent","Event","toggle","feature1","feature2","placeholder"],"mappings":"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","file":"chatbot.min.js","sourcesContent":["function initChatbot() {\n    function toggleChatbot() {\n        if (window.innerWidth <= 640) {\n            openChatbotMobile();\n        } else {\n            const chatbotContainer = document.getElementById('chatbot-container');\n            if (chatbotContainer.classList.contains('hidden')) {\n                openChatbot();\n            } else {\n                closeChatbot();\n            }\n        }\n    }\n\n    function openChatbot() {\n        const chatbotContainer = document.getElementById('chatbot-container');\n        chatbotContainer.classList.remove('hidden');\n        chatbotContainer.style.width = '20rem';\n        chatbotContainer.style.height = '28rem';\n        chatbotContainer.style.maxHeight = '28rem';\n        chatbotContainer.style.minHeight = '24rem';\n        chatbotContainer.style.bottom = '1rem';\n        chatbotContainer.style.right = '1rem';\n        chatbotContainer.style.left = 'auto';\n        chatbotContainer.style.borderRadius = '0.5rem';\n        document.body.classList.add('chatbot-open');\n        document.getElementById('user-input').focus();\n\n        const chatbox = document.getElementById('chatbox');\n        const lang = document.body.getAttribute('data-lang') || 'en';\n\n        if (!localStorage.getItem('initialMessagesShown')) {\n            let messages;\n            if (lang === 'es') {\n                messages = [\n                    \"Â¡Hola! ðŸŒŸ\",\n                    \"Â¿Tienes preguntas sobre MYA, Olivea o DiVino?\",\n                    \"Â¡PregÃºntame, estoy aquÃ­ para ayudarte!\"\n                ];\n            } else {\n                messages = [\n                    \"Hey there! ðŸŒŸ\",\n                    \"Got questions about MYA, Olivea, or DiVino?\",\n                    \"Ask away, I'm here to help!\"\n                ];\n            }\n            showInitialMessages(chatbox, messages, 'chatHistoryDesktop');\n            localStorage.setItem('initialMessagesShown', 'true');\n        } else {\n            chatbox.innerHTML = localStorage.getItem('chatHistoryDesktop') || '';\n        }\n    }\n\n    function closeChatbot() {\n        const chatbotContainer = document.getElementById('chatbot-container');\n        chatbotContainer.classList.add('hidden');\n        document.body.classList.remove('chatbot-open');\n        document.getElementById('chatbot-toggle').focus();\n    }\n\n    function openChatbotMobile() {\n        const lang = document.body.getAttribute('data-lang') || 'en';\n        Swal.fire({\n            title: 'Chatbot',\n            html: `\n                <div id=\"chatbot-container-swal\" class=\"flex flex-col w-full h-full\">\n                    <div id=\"chatbot-header-swal\" class=\"p-4 flex justify-between items-center\">\n                        <img src=\"/static/dist/img/svg/mya-ai-bounce.svg\" alt=\"Avatar\" class=\"w-16 h-16\">\n                        <button id=\"close-chatbot-swal\" class=\"text-white\" aria-label=\"Close Chatbot\">&times;</button>\n                    </div>\n                    <div id=\"chatbox-swal\" class=\"flex-1 p-4 overflow-auto\"></div>\n                    <div class=\"input-area-swal p-2 flex items-center\">\n                        <input type=\"text\" id=\"user-input-swal\" class=\"p-2 flex-grow focus:outline-none\">\n                        <button id=\"send-button-swal\" class=\"send-button-swal\" aria-label=\"Send message\">\n                            <img src=\"/static/dist/img/svg/sending.svg\" alt=\"Sending\">\n                        </button>\n                    </div>\n                </div>\n            `,\n            showCloseButton: false,\n            showConfirmButton: false,\n            customClass: {\n                popup: 'chatbot-swal-popup'\n            },\n            width: '100%',\n            heightAuto: false,\n            padding: '0',\n            background: '#fff',\n            backdrop: true,\n            allowOutsideClick: false,\n            allowEscapeKey: false,\n            didOpen: () => {\n                console.log(\"Modal opened\");\n\n                const chatbox = document.getElementById('chatbox-swal');\n                if (!localStorage.getItem('initialMessagesShownMobile')) {\n                    let messages;\n                    if (lang === 'es') {\n                        messages = [\n                            \"Â¡Hola! ðŸŒŸ\",\n                            \"Â¿Tienes preguntas sobre MYA, Olivea o DiVino?\",\n                            \"Â¡PregÃºntame, estoy aquÃ­ para ayudarte!\"\n                        ];\n                    } else {\n                        messages = [\n                            \"Hey there! ðŸŒŸ\",\n                            \"Got questions about MYA, Olivea, or DiVino?\",\n                            \"Ask away, I'm here to help!\"\n                        ];\n                    }\n                    showInitialMessages(chatbox, messages, 'chatHistoryMobile');\n                    localStorage.setItem('initialMessagesShownMobile', 'true');\n                } else {\n                    chatbox.innerHTML = localStorage.getItem('chatHistoryMobile') || '';\n                }\n\n                const closeButton = document.getElementById('close-chatbot-swal');\n                closeButton.addEventListener('click', () => Swal.close());\n\n                const userInput = document.getElementById('user-input-swal');\n                userInput.addEventListener('keypress', (event) => {\n                    if (event.key === 'Enter') {\n                        sendMessageSwal(event);\n                    }\n                });\n\n                const sendButton = document.getElementById('send-button-swal');\n                sendButton.addEventListener('click', (event) => sendMessageSwal(event));\n                sendButton.addEventListener('touchstart', (event) => {\n                    event.preventDefault();\n                    sendMessageSwal(event);\n                });\n\n                userInput.focus();\n            }\n        });\n    }\n\n    async function sendMessageSwal(event) {\n        event.preventDefault();\n\n        const userInput = document.getElementById('user-input-swal');\n        const userInputValue = userInput.value;\n        if (userInputValue.trim() === \"\") return;\n\n        console.log(\"Sending message:\", userInputValue);\n\n        const chatbox = document.getElementById('chatbox-swal');\n        chatbox.innerHTML += `<div class=\"text-left chatbot-message\"><strong>You:</strong> ${userInputValue}</div>`;\n        userInput.value = '';\n\n        try {\n            const response = await fetch('/chatbot/chat', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ message: userInputValue })\n            });\n            const data = await response.json();\n            chatbox.innerHTML += `<div class=\"text-left chatbot-message\"><strong>Bot:</strong> ${data.response}</div>`;\n            chatbox.scrollTop = chatbox.scrollHeight;\n            localStorage.setItem('chatHistoryMobile', chatbox.innerHTML);\n        } catch (error) {\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: 'Something went wrong with sending your message!',\n            });\n        }\n    }\n\n    async function sendMessage(event) {\n        event.preventDefault();\n\n        const userInput = document.getElementById('user-input');\n        const userInputValue = userInput.value;\n        if (userInputValue.trim() === \"\") return;\n\n        const chatbox = document.getElementById('chatbox');\n        chatbox.innerHTML += `<div class=\"text-left chatbot-message\"><strong>You:</strong> ${userInputValue}</div>`;\n        userInput.value = '';\n\n        try {\n            const response = await fetch('/chatbot/chat', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ message: userInputValue })\n            });\n            const data = await response.json();\n            chatbox.innerHTML += `<div class=\"text-left chatbot-message\"><strong>Bot:</strong> ${data.response}</div>`;\n            chatbox.scrollTop = chatbox.scrollHeight;\n            localStorage.setItem('chatHistoryDesktop', chatbox.innerHTML);\n        } catch (error) {\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: 'Something went wrong with sending your message!',\n            });\n        }\n    }\n\n    function showInitialMessages(chatbox, messages, historyKey) {\n        chatbox.innerHTML = '';\n        let delay = 0;\n        messages.forEach((message, index) => {\n            setTimeout(() => {\n                chatbox.innerHTML += `<div class=\"text-left chatbot-message\"><strong>Bot:</strong> ${message}</div>`;\n                chatbox.scrollTop = chatbox.scrollHeight;\n                localStorage.setItem(historyKey, chatbox.innerHTML);\n            }, delay);\n            delay += 1000;\n        });\n    }\n\n    document.addEventListener('keydown', function(event) {\n        const chatbotToggle = document.getElementById('chatbot-toggle');\n        const chatbotContainer = document.getElementById('chatbot-container');\n        const userInput = document.getElementById('user-input');\n        const closeButton = chatbotContainer.querySelector('button[aria-label=\"Close Chatbot\"]');\n\n        if (event.key === 'Enter' && document.activeElement === chatbotToggle) {\n            toggleChatbot();\n        }\n\n        if (event.key === 'Enter' && document.activeElement === closeButton) {\n            closeChatbot();\n        }\n\n        if (!chatbotContainer.classList.contains('hidden')) {\n            if (event.key === 'Tab' && document.activeElement === chatbotToggle) {\n                userInput.focus();\n                event.preventDefault();\n            }\n        }\n    });\n\n    document.addEventListener('DOMContentLoaded', function() {\n        dragElement(document.getElementById('chatbot-container'));\n    });\n\n    document.getElementById('chatbot-toggle').addEventListener('click', toggleChatbot);\n    document.getElementById('user-input').addEventListener('keypress', (event) => {\n        if (event.key === 'Enter') {\n            sendMessage(event);\n        }\n    });\n    document.querySelector('.send-button').addEventListener('click', (event) => sendMessage(event));\n    document.querySelector('.send-button').addEventListener('touchstart', (event) => {\n        event.preventDefault();\n        sendMessage(event);\n    });\n\n    const chatbotToggle = document.getElementById('chatbot-toggle');\n    chatbotToggle.addEventListener('animationend', () => {\n        chatbotToggle.style.animation = 'none';\n    });\n\n    window.addEventListener('resize', () => {\n        const chatbotContainer = document.getElementById('chatbot-container');\n        const chatbotToggle = document.getElementById('chatbot-toggle');\n        if (window.innerWidth <= 640) {\n            chatbotContainer.style.width = '100%';\n            chatbotContainer.style.height = 'auto';\n            chatbotContainer.style.bottom = '0';\n            chatbotContainer.style.right = '0';\n            chatbotContainer.style.left = '0';\n            chatbotContainer.style.maxHeight = '100%';\n            chatbotContainer.style.borderRadius = '0';\n            chatbotToggle.style.display = 'block';\n        } else {\n            chatbotContainer.style.width = '20rem';\n            chatbotContainer.style.height = 'auto';\n            chatbotContainer.style.bottom = '1rem';\n            chatbotContainer.style.right = '1rem';\n            chatbotContainer.style.left = 'auto';\n            chatbotContainer.style.maxHeight = '24rem';\n            chatbotContainer.style.borderRadius = '0.5rem';\n            chatbotToggle.style.display = 'block';\n        }\n    });\n\n    window.dispatchEvent(new Event('resize'));\n\n    window.addEventListener('load', function () {\n        const toggle = document.getElementById('chatbot-toggle');\n        if (window.innerWidth <= 640) {\n            toggle.style.display = 'block';\n        }\n    });\n}\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    initChatbot();\n});\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    const lang = document.body.getAttribute('data-lang') || 'en';\n    const userInput = document.getElementById('user-input');\n    if (lang === 'es') {\n        userInput.placeholder = 'Ingresa tu mensaje...';\n    } else {\n        userInput.placeholder = 'Enter your message...';\n    }\n});\n","export function feature1() {\n    console.log('Feature 1 initialized');\n}\n","export function feature2() {\n    console.log('Feature 2 initialized');\n}\n"]}