{"version":3,"sources":["chatbot.js","feature1.js","feature2.js"],"names":["initChatbot","document","getElementById","addEventListener","toggleChatbot","event","key","sendMessage","querySelector","window","handleResize","innerWidth","openChatbotMobile","classList","contains","openChatbot","closeChatbot","remove","body","add","focus","chatbox","lang","getAttribute","localStorage","getItem","innerHTML","let","messages","showInitialMessages","setItem","Swal","fire","title","html","showCloseButton","showConfirmButton","customClass","popup","width","heightAuto","padding","background","backdrop","allowOutsideClick","allowEscapeKey","didOpen","console","log","close","sendMessageSwal","async","preventDefault","userInput","userInputValue","value","trim","data","await","fetch","method","headers","Content-Type","JSON","stringify","message","json","response","scrollTop","scrollHeight","error","icon","text","historyKey","delay","forEach","index","setTimeout","chatbotContainer","style","height","bottom","right","left","maxHeight","borderRadius","feature1","feature2","closeButton"],"mappings":"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","file":"chatbot.min.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\n    initChatbot();\n});\n\nfunction initChatbot() {\n    document.getElementById('chatbot-toggle').addEventListener('click', toggleChatbot);\n    document.getElementById('user-input').addEventListener('keypress', function(event) {\n        if (event.key === 'Enter') {\n            sendMessage(event);\n        }\n    });\n    document.querySelector('.send-button').addEventListener('click', function(event) {\n        sendMessage(event);\n    });\n\n    window.addEventListener('resize', handleResize);\n    handleResize(); // Ensure proper styling on load\n}\n\nfunction toggleChatbot() {\n    if (window.innerWidth <= 640) {\n        openChatbotMobile();\n    } else {\n        const chatbotContainer = document.getElementById('chatbot-container');\n        if (chatbotContainer.classList.contains('hidden')) {\n            openChatbot();\n        } else {\n            closeChatbot();\n        }\n    }\n}\n\nfunction openChatbot() {\n    const chatbotContainer = document.getElementById('chatbot-container');\n    chatbotContainer.classList.remove('hidden');\n    document.body.classList.add('chatbot-open');\n    document.getElementById('user-input').focus();\n\n    const chatbox = document.getElementById('chatbox');\n    const lang = document.body.getAttribute('data-lang') || 'en';\n\n    if (!localStorage.getItem('initialMessagesShown')) {\n        let messages;\n        if (lang === 'es') {\n            messages = [\n                \"Â¡Hola! ðŸŒŸ\",\n                \"Â¿Tienes preguntas sobre MYA, Olivea o DiVino?\",\n                \"Â¡PregÃºntame, estoy aquÃ­ para ayudarte!\"\n            ];\n        } else {\n            messages = [\n                \"Hey there! ðŸŒŸ\",\n                \"Got questions about MYA, Olivea, or DiVino?\",\n                \"Ask away, I'm here to help!\"\n            ];\n        }\n        showInitialMessages(chatbox, messages, 'chatHistoryDesktop');\n        localStorage.setItem('initialMessagesShown', 'true');\n    } else {\n        chatbox.innerHTML = localStorage.getItem('chatHistoryDesktop') || '';\n    }\n}\n\nfunction closeChatbot() {\n    const chatbotContainer = document.getElementById('chatbot-container');\n    chatbotContainer.classList.add('hidden');\n    document.body.classList.remove('chatbot-open');\n    document.getElementById('chatbot-toggle').focus();\n}\n\nfunction openChatbotMobile() {\n    const lang = document.body.getAttribute('data-lang') || 'en';\n    Swal.fire({\n        title: 'Chatbot',\n        html: `\n            <div id=\"chatbot-container-swal\" class=\"flex flex-col w-full h-full\">\n                <div id=\"chatbot-header-swal\" class=\"p-4 flex justify-between items-center\">\n                    <img src=\"/static/dist/img/svg/mya-ai-bounce.svg\" alt=\"Avatar\" class=\"w-16 h-16\">\n                    <button id=\"close-chatbot-swal\" class=\"text-white\" aria-label=\"Close Chatbot\">&times;</button>\n                </div>\n                <div id=\"chatbox-swal\" class=\"flex-1 p-4 overflow-auto\"></div>\n                <div class=\"input-area-swal p-2 flex items-center\">\n                    <input type=\"text\" id=\"user-input-swal\" class=\"p-2 flex-grow focus:outline-none\">\n                    <button id=\"send-button-swal\" class=\"send-button-swal\" aria-label=\"Send message\">\n                        <img src=\"/static/dist/img/svg/sending.svg\" alt=\"Sending\">\n                    </button>\n                </div>\n            </div>\n        `,\n        showCloseButton: false,\n        showConfirmButton: false,\n        customClass: {\n            popup: 'chatbot-swal-popup'\n        },\n        width: '24rem',\n        heightAuto: false,\n        padding: '0',\n        background: '#fff',\n        backdrop: true,\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n        didOpen: () => {\n            console.log(\"Modal opened\");\n\n            const chatbox = document.getElementById('chatbox-swal');\n            if (!localStorage.getItem('initialMessagesShownMobile')) {\n                let messages;\n                if (lang === 'es') {\n                    messages = [\n                        \"Â¡Hola! ðŸŒŸ\",\n                        \"Â¿Tienes preguntas sobre MYA, Olivea o DiVino?\",\n                        \"Â¡PregÃºntame, estoy aquÃ­ para ayudarte!\"\n                    ];\n                } else {\n                    messages = [\n                        \"Hey there! ðŸŒŸ\",\n                        \"Got questions about MYA, Olivea, or DiVino?\",\n                        \"Ask away, I'm here to help!\"\n                    ];\n                }\n                showInitialMessages(chatbox, messages, 'chatHistoryMobile');\n                localStorage.setItem('initialMessagesShownMobile', 'true');\n            } else {\n                chatbox.innerHTML = localStorage.getItem('chatHistoryMobile') || '';\n            }\n\n            const closeButton = document.getElementById('close-chatbot-swal');\n            closeButton.addEventListener('click', () => Swal.close());\n\n            const userInput = document.getElementById('user-input-swal');\n            userInput.addEventListener('keypress', (event) => {\n                if (event.key === 'Enter') {\n                    sendMessageSwal(event);\n                }\n            });\n\n            const sendButton = document.getElementById('send-button-swal');\n            sendButton.addEventListener('click', (event) => sendMessageSwal(event));\n\n            console.log(\"Event listeners attached\");\n        }\n    });\n}\n\nasync function sendMessageSwal(event) {\n    event.preventDefault();\n\n    const userInput = document.getElementById('user-input-swal');\n    const userInputValue = userInput.value;\n    if (userInputValue.trim() === \"\") return;\n\n    console.log(\"Sending message:\", userInputValue);\n\n    const chatbox = document.getElementById('chatbox-swal');\n    chatbox.innerHTML += `<div class=\"text-left chatbot-message\"><strong>You:</strong> ${userInputValue}</div>`;\n    userInput.value = '';\n\n    try {\n        const response = await fetch('/chatbot/chat', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ message: userInputValue })\n        });\n        const data = await response.json();\n        chatbox.innerHTML += `<div class=\"text-left chatbot-message\"><strong>Bot:</strong> ${data.response}</div>`;\n        chatbox.scrollTop = chatbox.scrollHeight;\n        localStorage.setItem('chatHistoryMobile', chatbox.innerHTML);\n    } catch (error) {\n        Swal.fire({\n            icon: 'error',\n            title: 'Oops...',\n            text: 'Something went wrong with sending your message!',\n        });\n    }\n}\n\nasync function sendMessage(event) {\n    event.preventDefault();\n\n    const userInput = document.getElementById('user-input');\n    const userInputValue = userInput.value;\n    if (userInputValue.trim() === \"\") return;\n\n    const chatbox = document.getElementById('chatbox');\n    chatbox.innerHTML += `<div class=\"text-left chatbot-message\"><strong>You:</strong> ${userInputValue}</div>`;\n    userInput.value = '';\n\n    try {\n        const response = await fetch('/chatbot/chat', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ message: userInputValue })\n        });\n        const data = await response.json();\n        chatbox.innerHTML += `<div class=\"text-left chatbot-message\"><strong>Bot:</strong> ${data.response}</div>`;\n        chatbox.scrollTop = chatbox.scrollHeight;\n        localStorage.setItem('chatHistoryDesktop', chatbox.innerHTML);\n    } catch (error) {\n        Swal.fire({\n            icon: 'error',\n            title: 'Oops...',\n            text: 'Something went wrong with sending your message!',\n        });\n    }\n}\n\nfunction showInitialMessages(chatbox, messages, historyKey) {\n    chatbox.innerHTML = '';\n    let delay = 0;\n    messages.forEach((message, index) => {\n        setTimeout(() => {\n            chatbox.innerHTML += `<div class=\"text-left chatbot-message\"><strong>Bot:</strong> ${message}</div>`;\n            chatbox.scrollTop = chatbox.scrollHeight;\n            localStorage.setItem(historyKey, chatbox.innerHTML);\n        }, delay);\n        delay += 1000;\n    });\n}\n\nfunction handleResize() {\n    const chatbotContainer = document.getElementById('chatbot-container');\n    if (window.innerWidth <= 640) {\n        chatbotContainer.style.width = '100%';\n        chatbotContainer.style.height = 'auto';\n        chatbotContainer.style.bottom = '0';\n        chatbotContainer.style.right = '0';\n        chatbotContainer.style.left = '0';\n        chatbotContainer.style.maxHeight = '100%';\n        chatbotContainer.style.borderRadius = '0';\n    } else {\n        chatbotContainer.style.width = '20rem';\n        chatbotContainer.style.height = 'auto';\n        chatbotContainer.style.bottom = '1rem';\n        chatbotContainer.style.right = '1rem';\n        chatbotContainer.style.left = 'auto';\n        chatbotContainer.style.maxHeight = '24rem';\n        chatbotContainer.style.borderRadius = '0.5rem';\n    }\n}\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    const closeButton = document.getElementById('close-chatbot');\n    if (closeButton) {\n        closeButton.addEventListener('click', closeChatbot);\n    }\n});\n","export function feature1() {\n    console.log('Feature 1 initialized');\n}\n","export function feature2() {\n    console.log('Feature 2 initialized');\n}\n"]}